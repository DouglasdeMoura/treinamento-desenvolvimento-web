import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const App = () => {
  const [valorControladoPeloReact, setValor] = useState(0);
  const [comparacao, setComparacao] = useState(true);
  let valorNaoControladoPeloReact = 0;
  
  const handleOnClick = () => {
    setValor(valorControladoPeloReact + 1)
  }
  
  useEffect(() => {
    // O emoji abaixo ser√° exibido quando o componente for carregado
    // ou quando qualquer estado for alterado.
    console.log('üëã');
    
    // O emoji abaixo ser√° exibido quando o componente for
    // destru√≠do.
    return () => console.log('üí•');
  });
  
  useEffect(() => {
    console.log('üöÄ')
  }, []);
  // ^------------------
  // Este efeito ser√° executado apenas uma vez, quando o
  // o componente for carregado. √â neste efeito, por exemplo,
  // que far√≠amos uma chamada para uma API.
  
  useEffect(() => {
    // Ao contr√°rio do exemplo anterior, agora n√≥s s√≥ atualizamos
    // a vari√°vel local depois que a vari√°vel controlada pelo React
    // for atualizada...
    valorNaoControladoPeloReact = valorControladoPeloReact;

    // ...e, para que essa compara√ß√£o seja refletida na UI,
    // colocamos o resultado da compara√ß√£o em outra
    // vari√°vel controlada pelo React.
    setComparacao(valorControladoPeloReact === valorNaoControladoPeloReact);
  }, [valorControladoPeloReact]);
  // ^------------------
  // Este efeito ser√° executado sempre que houver alguma atualiza√ß√£o
  // em valorControladoPeloReact.
  
  useEffect(() => {
    console.log('üñäÔ∏è');
  }, [valorNaoControladoPeloReact]);
  // ^------------------
  // Este efeito ser√° executado quando o componente for renderizado
  // mas n√£o √© capaz de acompanhar as mudan√ßas de um vari√°vel n√£o
  // controlada pelo React.
  
  return (
    <div>
      <div>
        Valor n√£o controlado pelo React: <strong>{valorNaoControladoPeloReact}</strong>
      </div>
      <div>
        Valor controlado pelo React: <strong>{valorControladoPeloReact}</strong>
      </div>
      <div>
        Os valores s√£o iguais na mem√≥ria? {` `}
        {
          comparacao ?
            'Sim' : 'N√£o'
        }
      </div>
      <hr />
      <button onClick={handleOnClick}>+1</button>
    </div>
  )
}

render(<App />, document.getElementById('root'));
